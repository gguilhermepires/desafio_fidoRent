{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Downloads/32-finished/frontend/src/pages/Rockets.js\",\n  _s = $RefreshSig$();\nimport { Suspense } from 'react';\nimport { useLoaderData, json, defer, Await } from 'react-router-dom';\nimport RocketsList from '../components/RocketsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RocketsPage() {\n  _s();\n  const {\n    rockets\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 25\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: rockets,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(RocketsList, {\n        rockets: loadedEvents,\n        edit: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_s(RocketsPage, \"zHUL9u9aJEq3+nV0iKxRI1N3PcU=\", false, function () {\n  return [useLoaderData];\n});\n_c = RocketsPage;\nexport default RocketsPage;\nasync function loadRockets() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch events.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport function loader() {\n  return defer({\n    rockets: loadRockets()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"RocketsPage\");","map":{"version":3,"names":["Suspense","useLoaderData","json","defer","Await","RocketsList","RocketsPage","rockets","textAlign","loadedEvents","loadRockets","response","fetch","ok","message","status","resData","events","loader"],"sources":["/home/guilherme/Downloads/32-finished/frontend/src/pages/Rockets.js"],"sourcesContent":["import { Suspense } from 'react';\nimport { useLoaderData, json, defer, Await } from 'react-router-dom';\n\nimport RocketsList from '../components/RocketsList';\n\nfunction RocketsPage() {\n  const { rockets } = useLoaderData();\n\n  return (\n    <Suspense fallback={<p style={{ textAlign: 'center' }}>Loading...</p>}>\n      <Await resolve={rockets}>\n        {(loadedEvents) => <RocketsList rockets={loadedEvents} edit={false} />}\n      </Await>\n    </Suspense>\n  );\n}\n\nexport default RocketsPage;\n\nasync function loadRockets() {\n  const response = await fetch('http://localhost:8080/events');\n\n  if (!response.ok) {\n    throw json(\n      { message: 'Could not fetch events.' },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\n\nexport function loader() {\n  return defer({\n    rockets: loadRockets(),\n  });\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AAEpE,OAAOC,WAAW,MAAM,2BAA2B;AAAC;AAEpD,SAASC,WAAW,GAAG;EAAA;EACrB,MAAM;IAAEC;EAAQ,CAAC,GAAGN,aAAa,EAAE;EAEnC,oBACE,QAAC,QAAQ;IAAC,QAAQ,eAAE;MAAG,KAAK,EAAE;QAAEO,SAAS,EAAE;MAAS,CAAE;MAAA,UAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAK;IAAA,uBACpE,QAAC,KAAK;MAAC,OAAO,EAAED,OAAQ;MAAA,UACpBE,YAAY,iBAAK,QAAC,WAAW;QAAC,OAAO,EAAEA,YAAa;QAAC,IAAI,EAAE;MAAM;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EAChE;IAAA;IAAA;IAAA;EAAA,QACC;AAEf;AAAC,GAVQH,WAAW;EAAA,QACEL,aAAa;AAAA;AAAA,KAD1BK,WAAW;AAYpB,eAAeA,WAAW;AAE1B,eAAeI,WAAW,GAAG;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMX,IAAI,CACR;MAAEY,OAAO,EAAE;IAA0B,CAAC,EACtC;MACEC,MAAM,EAAE;IACV,CAAC,CACF;EACH,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACT,IAAI,EAAE;IACrC,OAAOc,OAAO,CAACC,MAAM;EACvB;AACF;AAEA,OAAO,SAASC,MAAM,GAAG;EACvB,OAAOf,KAAK,CAAC;IACXI,OAAO,EAAEG,WAAW;EACtB,CAAC,CAAC;AACJ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}